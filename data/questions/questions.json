[
  {
    "smaller": {
      "thing": "f-35",
      "measurement": "length",
      "name": "",
      "value": "2.0e1 m",
      "called": "Length of the F-35",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Betelgeuse",
      "measurement": "length",
      "name": "circumference",
      "value": "2.0e12 m",
      "called": "Circumference of Betelgeuse",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *F-35s* laid end to end would it take to wrap around the *Circumference of Betelgeuse*?",
    "quality": 1.0
  },
  {
    "smaller": {
      "thing": "Golf ball",
      "measurement": "length",
      "name": "circumference",
      "value": "1.0e-1 m",
      "called": "Circumference of a golf ball",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "all paved roads in the US",
      "measurement": "length",
      "name": "",
      "value": "4.0e9 m",
      "called": "Total length of all paved roads in the US",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *golf ball circumferences* would it take to span the length of *all paved roads in the US*?",
    "quality": 1.0
  },
  {
    "smaller": {
      "thing": "iphone 15",
      "measurement": "length",
      "name": "",
      "value": "1.0e-1 m",
      "called": "Length of an iPhone 15",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Bluetooth",
      "measurement": "length",
      "name": "range",
      "value": "1.0e1 m",
      "called": "Range of Bluetooth",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *iPhone 15s* would it take to span *the range of a Bluetooth device*?",
    "quality": 1.0
  },
  {
    "smaller": {
      "thing": "Great lakes",
      "measurement": "length",
      "name": "shoreline length",
      "value": "2.0e7 m",
      "called": "Shoreline length of the Great Lakes",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Observable Universe",
      "measurement": "length",
      "name": "circumference",
      "value": "3.0e27 m",
      "called": "Circumference of the observable universe",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "If you were to walk along the *shoreline of the Great Lakes*, how many *trips around the observable universe* would you need to cover?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "Moon",
      "measurement": "length",
      "name": "diameter",
      "value": "3.0e3 m",
      "called": "Diameter of the Moon",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Observable Universe",
      "measurement": "length",
      "name": "diameter",
      "value": "9.0e26 m",
      "called": "Diameter of the observable universe",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *moons* would fit along the *diameter of the observable universe*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "Largest wind turbine in the world",
      "measurement": "length",
      "name": "rotor length",
      "value": "1.0e2 m",
      "called": "Rotor length of the largest wind turbine in the world",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Curiosity Rover",
      "measurement": "length",
      "name": "distance driven",
      "value": "3.0e4 m",
      "called": "Distance driven by the Curiosity Rover",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "If you laid *the rotors of the largest wind turbine in the world* end to end, how many would it take to reach *the distance driven by the Curiosity Rover*?",
    "quality": 1.0
  },
  {
    "smaller": {
      "thing": "Bluetooth",
      "measurement": "length",
      "name": "range",
      "value": "1.0e1 m",
      "called": "Range of Bluetooth",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Great lakes",
      "measurement": "length",
      "name": "shoreline length",
      "value": "2.0e7 m",
      "called": "Shoreline length of the Great Lakes",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "If you placed *Bluetooth devices* end to end, how many would be needed to cover the *shoreline length of the Great Lakes*?",
    "quality": 0.25
  },
  {
    "smaller": {
      "thing": "Moon",
      "measurement": "length",
      "name": "diameter",
      "value": "3.0e3 m",
      "called": "Diameter of the Moon",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Observable Universe",
      "measurement": "length",
      "name": "circumference",
      "value": "3.0e27 m",
      "called": "Circumference of the observable universe",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *Moons* would fit into the *Circumference of the observable universe*?",
    "quality": 0.5
  },
  {
    "smaller": {
      "thing": "enola gay",
      "measurement": "length",
      "name": "",
      "value": "3.0e1 m",
      "called": "Length of the Enola Gay",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Observable Universe",
      "measurement": "length",
      "name": "diameter",
      "value": "9.0e26 m",
      "called": "Diameter of the observable universe",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *Enola Gays* laid end to end would it take to span *the diameter of the observable universe*?",
    "quality": 1.0
  },
  {
    "smaller": {
      "thing": "Curiosity Rover",
      "measurement": "length",
      "name": "distance driven",
      "value": "3.0e4 m",
      "called": "Distance driven by the Curiosity Rover",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Mercury",
      "measurement": "length",
      "name": "diameter",
      "value": "5.0e6 m",
      "called": "Diameter of Mercury",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many times would the *Curiosity Rover* need to drive its total distance to match *the diameter of Mercury*?",
    "quality": 0.75
  },
  {
    "smaller": {
      "thing": "enola gay",
      "measurement": "length",
      "name": "",
      "value": "3.0e1 m",
      "called": "Length of the Enola Gay",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Largest wind turbine in the world",
      "measurement": "length",
      "name": "rotor length",
      "value": "1.0e2 m",
      "called": "Rotor length of the largest wind turbine in the world",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many times longer is the *rotor length of the largest wind turbine in the world* compared to the *length of the Enola Gay*?",
    "quality": 1.0
  },
  {
    "smaller": {
      "thing": "Venus",
      "measurement": "length",
      "name": "diameter",
      "value": "1.0e7 m",
      "called": "Diameter of the planet Venus",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "all paved roads in the US",
      "measurement": "length",
      "name": "",
      "value": "4.0e9 m",
      "called": "Total length of all paved roads in the US",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many times would *the diameter of Venus* fit into *the total length of all paved roads in the US*?",
    "quality": 1.0
  },
  {
    "smaller": {
      "thing": "Largest wind turbine in the world",
      "measurement": "length",
      "name": "tower height",
      "value": "2.0e2 m",
      "called": "Tower height of the largest wind turbine in the world",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "English channel",
      "measurement": "length",
      "name": "width of the narrowest stretch",
      "value": "3.0e4 m",
      "called": "Width of the narrowest stretch of the English Channel",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *tower heights of the largest wind turbine in the world* would it take to bridge *the narrowest stretch of the English Channel*?",
    "quality": 1.0
  },
  {
    "smaller": {
      "thing": "football",
      "measurement": "length",
      "name": "",
      "value": "3.0e-1 m",
      "called": "Length of a football",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Statue of Liberty",
      "measurement": "length",
      "name": "",
      "value": "9.0e1 m",
      "called": "Length of the Statue of Liberty",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *football lengths* would it take to reach from the *base to the tip of the Statue of Liberty*?",
    "quality": 0.75
  },
  {
    "smaller": {
      "thing": "International Space Station",
      "measurement": "length",
      "name": "",
      "value": "1.0e2 m",
      "called": "Length of the International Space Station",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Eiffel Tower",
      "measurement": "length",
      "name": "",
      "value": "3.0e2 m",
      "called": "Height of the Eiffel Tower",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *International Space Stations* stacked vertically would it take to match the *height of the Eiffel Tower*?",
    "quality": 1.0
  },
  {
    "smaller": {
      "thing": "Largest wind turbine in the world",
      "measurement": "length",
      "name": "tower height",
      "value": "2.0e2 m",
      "called": "Tower height of the largest wind turbine in the world",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "all paved roads in the US",
      "measurement": "length",
      "name": "",
      "value": "4.0e9 m",
      "called": "Total length of all paved roads in the US",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *tower heights of the largest wind turbine in the world* would it take to match the *total length of all paved roads in the US*?",
    "quality": 0.95
  },
  {
    "smaller": {
      "thing": "football",
      "measurement": "length",
      "name": "",
      "value": "3.0e-1 m",
      "called": "Length of a football",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "English channel",
      "measurement": "length",
      "name": "width of the narrowest stretch",
      "value": "3.0e4 m",
      "called": "Width of the narrowest stretch of the English Channel",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *footballs* laid side by side would it take to span the *width of the narrowest stretch of the English Channel*?",
    "quality": 0.475
  },
  {
    "smaller": {
      "thing": "Statue of Liberty",
      "measurement": "length",
      "name": "",
      "value": "9.0e1 m",
      "called": "Length of the Statue of Liberty",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Eiffel Tower",
      "measurement": "length",
      "name": "",
      "value": "3.0e2 m",
      "called": "Height of the Eiffel Tower",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many times taller is the *Eiffel Tower* compared to the *Statue of Liberty's length*?",
    "quality": 0.7124999999999999
  },
  {
    "smaller": {
      "thing": "International Space Station",
      "measurement": "length",
      "name": "",
      "value": "1.0e2 m",
      "called": "Length of the International Space Station",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Boeing 747",
      "measurement": "length",
      "name": "range",
      "value": "9.0e6 m",
      "called": "Range of a Boeing 747",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many times can you lay the *International Space Station* end to end in the *range of a Boeing 747*?",
    "quality": 0.95
  },
  {
    "smaller": {
      "thing": "hair dryer",
      "measurement": "length",
      "name": "",
      "value": "3.0e-1 m",
      "called": "Length of a hair dryer",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "lake Ontario",
      "measurement": "length",
      "name": "",
      "value": "3.0e5 m",
      "called": "Length of Lake Ontario",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *hair dryers* would it take to span *the length of Lake Ontario*?",
    "quality": 0.95
  },
  {
    "smaller": {
      "thing": "Civic",
      "measurement": "volume",
      "name": "trunk",
      "value": "4.0e-1 m3",
      "called": "Volume of the trunk of a Civic",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Pluto",
      "measurement": "volume",
      "name": "",
      "value": "7.0e18 m3",
      "called": "Volume of Pluto",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *Honda Civic trunks* would it take to fit the *volume of Pluto*?",
    "quality": 0.99
  },
  {
    "smaller": {
      "thing": "Earth",
      "measurement": "volume",
      "name": "",
      "value": "1.0e21 m3",
      "called": "Volume of Earth",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Observable Universe",
      "measurement": "volume",
      "name": "",
      "value": "4.0e80 m3",
      "called": "Volume of the Observable Universe",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many times would the *Volume of Earth* fit into the *Volume of the Observable Universe*?",
    "quality": 0.99
  },
  {
    "smaller": {
      "thing": "Water in the world",
      "measurement": "volume",
      "name": "",
      "value": "1.0e18 m3",
      "called": "Volume of water in the world",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Observable Universe",
      "measurement": "volume",
      "name": "",
      "value": "4.0e80 m3",
      "called": "Volume of the Observable Universe",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many times could the *volume of water in the world* fit into *the volume of the Observable Universe*?",
    "quality": 0.99
  },
  {
    "smaller": {
      "thing": "Concorde",
      "measurement": "volume",
      "name": "fuel capacity",
      "value": "1.0e8 g",
      "called": "Fuel capacity of the Concorde",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "The Internet",
      "measurement": "volume",
      "name": "",
      "value": "2.0e23 bytes",
      "called": "Volume of the Internet",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many times could the *fuel capacity of the Concorde* fill up the *volume of the Internet*?",
    "quality": -0.2
  },
  {
    "smaller": {
      "thing": "blue whale",
      "measurement": "volume",
      "name": "",
      "value": "9.0e1 m3",
      "called": "Volume of a blue whale",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Water in the world",
      "measurement": "volume",
      "name": "",
      "value": "1.0e18 m3",
      "called": "Volume of water in the world",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *blue whales* would it take to hold the same volume as *the water in the world*?",
    "quality": 0.2
  },
  {
    "smaller": {
      "thing": "basketball",
      "measurement": "volume",
      "name": "",
      "value": "7.0e-3 m3",
      "called": "Volume of a basketball",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Concorde",
      "measurement": "volume",
      "name": "fuel capacity",
      "value": "1.0e8 g",
      "called": "Fuel capacity of the Concorde",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *basketballs* filled with the same volume would it take to hold the *fuel capacity of the Concorde*?",
    "quality": 0.2
  },
  {
    "smaller": {
      "thing": "Mediterranean Sea",
      "measurement": "volume",
      "name": "",
      "value": "4.0e15 m3",
      "called": "Volume of the Mediterranean Sea",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Indian Ocean",
      "measurement": "volume",
      "name": "",
      "value": "3.0e17 m3",
      "called": "Volume of the Indian Ocean",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many times could the *volume of the Mediterranean Sea* fit into the *volume of the Indian Ocean*?",
    "quality": 0.99
  },
  {
    "smaller": {
      "thing": "Boeing 747",
      "measurement": "volume",
      "name": "cargo",
      "value": "2.0e2 m3",
      "called": "Volume of the cargo space on a Boeing 747",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Olympic swimming pool",
      "measurement": "volume",
      "name": "",
      "value": "2.0e3 m3",
      "called": "Volume of an Olympic swimming pool",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *cargo spaces of a Boeing 747* could fit inside *an Olympic swimming pool* in terms of volume?",
    "quality": 0.6
  },
  {
    "smaller": {
      "thing": "largest container ship",
      "measurement": "volume",
      "name": "total container volume",
      "value": "9.0e5 m3",
      "called": "Total container volume of the largest container ship",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Pluto",
      "measurement": "volume",
      "name": "",
      "value": "7.0e18 m3",
      "called": "Volume of Pluto",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *largest container ships* full of cargo would it take to match the *volume of Pluto*?",
    "quality": 0.6
  },
  {
    "smaller": {
      "thing": "Taj Mahal",
      "measurement": "volume",
      "name": "",
      "value": "5.0e5 m3",
      "called": "Volume of the Taj Mahal",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Largest hydroelectric plant (Three Gorges Dam)",
      "measurement": "volume",
      "name": "reservoir volume",
      "value": "4.0e10 m3",
      "called": "Reservoir volume of the Three Gorges Dam",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *Taj Mahals* would fit into the *reservoir volume of the Three Gorges Dam*?",
    "quality": 0.99
  },
  {
    "smaller": {
      "thing": "f-35",
      "measurement": "surface area",
      "name": "wing area",
      "value": "4.0e1 m2",
      "called": "Wing area of an F-35",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Observable Universe",
      "measurement": "surface area",
      "name": "",
      "value": "2.0e54 m2",
      "called": "Surface area of the observable universe",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *F-35 wing areas* would it take to cover *the surface area of the observable universe*?",
    "quality": 0.99
  },
  {
    "smaller": {
      "thing": "macbook (which?)",
      "measurement": "surface area",
      "name": "top",
      "value": "7.0e-2 m2",
      "called": "Surface area of the top of a MacBook",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Pyramid of Giza",
      "measurement": "surface area",
      "name": "including base",
      "value": "1.0e5 m2",
      "called": "Surface area of the Pyramid of Giza including the base",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *MacBook tops* would it take to cover the *surface area of the Pyramid of Giza, including the base*?",
    "quality": 0.99
  },
  {
    "smaller": {
      "thing": "f-35",
      "measurement": "surface area",
      "name": "wing area",
      "value": "4.0e1 m2",
      "called": "Wing area of an F-35",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Taj Mahal",
      "measurement": "surface area",
      "name": "",
      "value": "4.0e4 m2",
      "called": "Surface area of the Taj Mahal",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *F-35s* with their wings fully expanded would it take to cover the *surface area of the Taj Mahal*?",
    "quality": 0.4
  },
  {
    "smaller": {
      "thing": "macbook (which?)",
      "measurement": "surface area",
      "name": "top",
      "value": "7.0e-2 m2",
      "called": "Surface area of the top of a MacBook",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "India",
      "measurement": "surface area",
      "name": "",
      "value": "3.0e12 m2",
      "called": "Surface area of India",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *MacBook tops* would it take to cover the *surface area of India*?",
    "quality": 0.99
  },
  {
    "smaller": {
      "thing": "Australia",
      "measurement": "surface area",
      "name": "",
      "value": "8.0e12 m2",
      "called": "Surface area of Australia",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Africa",
      "measurement": "surface area",
      "name": "",
      "value": "3.0e13 m2",
      "called": "Surface area of Africa",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *Australia's* would fit into the *surface area of Africa*?",
    "quality": 0.8
  },
  {
    "smaller": {
      "thing": "James Webb Space Telescope",
      "measurement": "surface area",
      "name": "mirror area",
      "value": "2.0e1 m2",
      "called": "Mirror area of the James Webb Space Telescope",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Mediterranean Sea",
      "measurement": "surface area",
      "name": "",
      "value": "2.0e12 m2",
      "called": "Surface area of the Mediterranean Sea",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *James Webb Space Telescope mirrors* would be needed to cover the *surface area of the Mediterranean Sea*?",
    "quality": 0.99
  },
  {
    "smaller": {
      "thing": "proton",
      "measurement": "surface area",
      "name": "",
      "value": "9.0e-30 m2",
      "called": "Surface area of a proton",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "AMD Ryzen Threadripper PRO 7995WX",
      "measurement": "surface area",
      "name": "",
      "value": "8.0e-4 m2",
      "called": "Surface area of an AMD Ryzen Threadripper PRO 7995WX",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *surface areas of a proton* would it take to cover the *surface area of an AMD Ryzen Threadripper PRO 7995WX*?",
    "quality": 0.99
  },
  {
    "smaller": {
      "thing": "Nile River",
      "measurement": "surface area",
      "name": "basin size",
      "value": "3.0e12 m2",
      "called": "Basin size of the Nile River",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "North America",
      "measurement": "surface area",
      "name": "",
      "value": "2.0e13 m2",
      "called": "Surface area of North America",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many times could the *basin size of the Nile River* fit into the *surface area of North America*?",
    "quality": 0.8
  },
  {
    "smaller": {
      "thing": "iphone 15",
      "measurement": "surface area",
      "name": "top",
      "value": "1.0e-2 m2",
      "called": "Surface area of the top of an iPhone 15",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Pluto",
      "measurement": "surface area",
      "name": "",
      "value": "2.0e13 m2",
      "called": "Surface area of Pluto",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *iPhone 15 top surfaces* would it take to cover the *surface area of Pluto*?",
    "quality": 0.8
  },
  {
    "smaller": {
      "thing": "Hubble Space Telescope",
      "measurement": "surface area",
      "name": "collecting area",
      "value": "4.0e0 m2",
      "called": "Collecting area of the Hubble Space Telescope",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "lake Michigan",
      "measurement": "surface area",
      "name": "",
      "value": "6.0e10 m2",
      "called": "Surface area of Lake Michigan",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *Hubble Space Telescope collecting areas* would it take to cover the entire *surface area of Lake Michigan*?",
    "quality": 0.99
  },
  {
    "smaller": {
      "thing": "GeForce rtx 4090",
      "measurement": "volume",
      "name": "",
      "value": "2.0e-3 m3",
      "called": "Volume of the GeForce RTX 4090",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Titanic",
      "measurement": "volume",
      "name": "",
      "value": "1.0e5 m3",
      "called": "Volume of the Titanic",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *GeForce RTX 4090 graphics cards* could fit inside the *volume of the Titanic*?",
    "quality": 0.99
  },
  {
    "smaller": {
      "thing": "ink in an HP ink cartridge",
      "measurement": "volume",
      "name": "",
      "value": "4.0e-6 m3",
      "called": "Volume of ink in an HP ink cartridge",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Little Boy bomb",
      "measurement": "volume",
      "name": "",
      "value": "1.0e0 m3",
      "called": "Volume of the Little Boy bomb",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many HP ink cartridges would you need to fill the volume of the *Little Boy bomb*?",
    "quality": 0.8
  },
  {
    "smaller": {
      "thing": "Olympic swimming pool",
      "measurement": "volume",
      "name": "",
      "value": "2.0e3 m3",
      "called": "Volume of an Olympic swimming pool",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Total amount of gold ever mined",
      "measurement": "volume",
      "name": "",
      "value": "1.0e4 m3",
      "called": "Volume of total gold ever mined",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *Olympic swimming pools* could the *volume of total gold ever mined* fill?",
    "quality": 0.8
  },
  {
    "smaller": {
      "thing": "soccer ball",
      "measurement": "volume",
      "name": "",
      "value": "6.0e-3 m3",
      "called": "Volume of a soccer ball",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Pyramid of Giza",
      "measurement": "volume",
      "name": "",
      "value": "3.0e6 m3",
      "called": "Volume of the Pyramid of Giza",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *soccer balls* could fit inside the *Volume of the Pyramid of Giza*?",
    "quality": 0.99
  },
  {
    "smaller": {
      "thing": "panama canal",
      "measurement": "volume",
      "name": "",
      "value": "2.0e5 m3/ship",
      "called": "Volume of the Panama Canal per ship",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Milky Way",
      "measurement": "volume",
      "name": "",
      "value": "7.0e60 m3",
      "called": "Volume of the Milky Way",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *ships each filled with the volume of the Panama Canal* would it take to match the *volume of the Milky Way*?",
    "quality": 0.2
  },
  {
    "smaller": {
      "thing": "neutron",
      "measurement": "volume",
      "name": "",
      "value": "2.0e-45 m3",
      "called": "Neutron volume",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Frozen fresh water in the world",
      "measurement": "volume",
      "name": "",
      "value": "2.0e16 m3",
      "called": "Volume of frozen fresh water in the world",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many times could the *volume of a neutron* fit into the *volume of frozen fresh water in the world*?",
    "quality": 0.99
  },
  {
    "smaller": {
      "thing": "Neptune",
      "measurement": "volume",
      "name": "",
      "value": "6.0e22 m3",
      "called": "Volume of Neptune",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Betelgeuse",
      "measurement": "volume",
      "name": "",
      "value": "1.0e30 m3",
      "called": "Volume of Betelgeuse",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *Neptunes* could fit into the *volume of Betelgeuse*?",
    "quality": 0.99
  },
  {
    "smaller": {
      "thing": "gasoline production",
      "measurement": "volume",
      "name": "",
      "value": "5.0e-1 m3/s",
      "called": "Rate of gasoline production",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Largest Redwood",
      "measurement": "volume",
      "name": "",
      "value": "5.0e2 m3",
      "called": "Volume of the largest Redwood",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many seconds would it take to produce a volume of gasoline equal to the *volume of the largest Redwood* given a constant *rate of gasoline production*?",
    "quality": 0.4
  },
  {
    "smaller": {
      "thing": "GeForce rtx 4090",
      "measurement": "volume",
      "name": "",
      "value": "2.0e-3 m3",
      "called": "Volume of the GeForce RTX 4090",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Honda CR-V",
      "measurement": "volume",
      "name": "gas tank",
      "value": "5.0e-2 m3",
      "called": "Volume of the gas tank of a Honda CR-V",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *gas tanks of a Honda CR-V* would it take to hold the *volume of a GeForce RTX 4090*?",
    "quality": 0.2
  },
  {
    "smaller": {
      "thing": "largest container ship",
      "measurement": "volume",
      "name": "total container volume",
      "value": "9.0e5 m3",
      "called": "Total container volume of the largest container ship",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Moon",
      "measurement": "volume",
      "name": "",
      "value": "2.0e19 m3",
      "called": "Volume of the Moon",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many times could the *total container volume of the largest container ship* fit into the *volume of the Moon*?",
    "quality": 0.9
  },
  {
    "smaller": {
      "thing": "Corolla",
      "measurement": "volume",
      "name": "gas tank",
      "value": "5.0e-2 m3",
      "called": "Volume of the gas tank of a Corolla",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Little Boy bomb",
      "measurement": "volume",
      "name": "",
      "value": "1.0e0 m3",
      "called": "Volume of the Little Boy bomb",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many times could the *volume of the gas tank of a Corolla* fit into the *volume of the Little Boy bomb*?",
    "quality": 0.99
  },
  {
    "smaller": {
      "thing": "macbook (which?)",
      "measurement": "volume",
      "name": "",
      "value": "7.0e-4 m3",
      "called": "Volume of a MacBook",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Largest Redwood",
      "measurement": "volume",
      "name": "",
      "value": "5.0e2 m3",
      "called": "Volume of the largest Redwood",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *MacBooks* could fit into the *volume of the largest Redwood* tree?",
    "quality": 0.99
  },
  {
    "smaller": {
      "thing": "panama canal",
      "measurement": "volume",
      "name": "",
      "value": "2.0e5 m3/ship",
      "called": "Volume of the Panama Canal per ship",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Pyramid of Giza",
      "measurement": "volume",
      "name": "",
      "value": "3.0e6 m3",
      "called": "Volume of the Pyramid of Giza",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many ships, at capacity, would it take to fill the *volume of the Pyramid of Giza*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "neutron",
      "measurement": "volume",
      "name": "",
      "value": "2.0e-45 m3",
      "called": "Neutron volume",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Milky Way",
      "measurement": "volume",
      "name": "",
      "value": "7.0e60 m3",
      "called": "Volume of the Milky Way",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *neutrons* could fit into the *volume of the Milky Way galaxy*?",
    "quality": 0.99
  },
  {
    "smaller": {
      "thing": "Frozen fresh water in the world",
      "measurement": "volume",
      "name": "",
      "value": "2.0e16 m3",
      "called": "Volume of frozen fresh water in the world",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Betelgeuse",
      "measurement": "volume",
      "name": "",
      "value": "1.0e30 m3",
      "called": "Volume of Betelgeuse",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *world's volumes of frozen fresh water* could fit into the *volume of Betelgeuse*?",
    "quality": 0.8
  },
  {
    "smaller": {
      "thing": "Largest Redwood",
      "measurement": "volume",
      "name": "",
      "value": "5.0e2 m3",
      "called": "Volume of the largest Redwood",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Neptune",
      "measurement": "volume",
      "name": "",
      "value": "6.0e22 m3",
      "called": "Volume of Neptune",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many times could the *volume of the largest Redwood tree* fit into the *volume of Neptune*?",
    "quality": 0.99
  },
  {
    "smaller": {
      "thing": "GeForce rtx 4090",
      "measurement": "volume",
      "name": "",
      "value": "2.0e-3 m3",
      "called": "Volume of the GeForce RTX 4090",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "gasoline production",
      "measurement": "volume",
      "name": "",
      "value": "5.0e-1 m3/s",
      "called": "Rate of gasoline production",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "If we could convert the *volume of the GeForce RTX 4090* graphics card to gasoline at the *rate of gasoline production*, how long would it take?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "Honda CR-V",
      "measurement": "volume",
      "name": "gas tank",
      "value": "5.0e-2 m3",
      "called": "Volume of the gas tank of a Honda CR-V",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "largest container ship",
      "measurement": "volume",
      "name": "total container volume",
      "value": "9.0e5 m3",
      "called": "Total container volume of the largest container ship",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many times could the *volume of the gas tank of a Honda CR-V* fit into the *total container volume of the largest container ship*?",
    "quality": 0.99
  },
  {
    "smaller": {
      "thing": "Corolla",
      "measurement": "volume",
      "name": "gas tank",
      "value": "5.0e-2 m3",
      "called": "Volume of the gas tank of a Corolla",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Moon",
      "measurement": "volume",
      "name": "",
      "value": "2.0e19 m3",
      "called": "Volume of the Moon",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many times could the *volume of the gas tank of a Corolla* fit into the *volume of the Moon*?",
    "quality": 0.99
  },
  {
    "smaller": {
      "thing": "macbook (which?)",
      "measurement": "volume",
      "name": "",
      "value": "7.0e-4 m3",
      "called": "Volume of a MacBook",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Little Boy bomb",
      "measurement": "volume",
      "name": "",
      "value": "1.0e0 m3",
      "called": "Volume of the Little Boy bomb",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many times could the volume of a *MacBook* fit into the *volume of the Little Boy bomb*?",
    "quality": 0.99
  },
  {
    "smaller": {
      "thing": "tennis ball",
      "measurement": "volume",
      "name": "",
      "value": "1.0e-4 m3",
      "called": "Volume of a tennis ball",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Largest Redwood",
      "measurement": "volume",
      "name": "",
      "value": "5.0e2 m3",
      "called": "Volume of the largest Redwood",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *tennis balls* could fit inside the *volume of the largest Redwood* tree?",
    "quality": 0.9800000000000001
  },
  {
    "smaller": {
      "thing": "Civic",
      "measurement": "volume",
      "name": "gas tank",
      "value": "5.0e-2 m3",
      "called": "Volume of the gas tank of a Civic",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Honda CR-V",
      "measurement": "volume",
      "name": "trunk",
      "value": "2.0e0 m3",
      "called": "Volume of the trunk of a Honda CR-V",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many times could the *volume of the gas tank of a Civic* fit into the *volume of the trunk of a Honda CR-V*?",
    "quality": 0.99
  },
  {
    "smaller": {
      "thing": "James Webb Space Telescope",
      "measurement": "surface area",
      "name": "mirror area",
      "value": "2.0e1 m2",
      "called": "Mirror area of the James Webb Space Telescope",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Concorde",
      "measurement": "surface area",
      "name": "wing area",
      "value": "4.0e2 m2",
      "called": "Wing area of the Concorde",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many times could the *mirror area of the James Webb Space Telescope* fit into the *wing area of the Concorde*?",
    "quality": 0.99
  },
  {
    "smaller": {
      "thing": "United States",
      "measurement": "surface area",
      "name": "",
      "value": "1.0e13 m2",
      "called": "Surface area of the United States",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Americas",
      "measurement": "surface area",
      "name": "",
      "value": "4.0e13 m2",
      "called": "Surface area of the Americas",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many times could the *surface area of the United States* fit into the *surface area of the Americas*?",
    "quality": 0.99
  },
  {
    "smaller": {
      "thing": "apple m1",
      "measurement": "surface area",
      "name": "",
      "value": "1.0e-4 m2",
      "called": "Surface area of the Apple M1",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Sun",
      "measurement": "surface area",
      "name": "",
      "value": "6.0e18 m2",
      "called": "Surface area of the Sun",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *surface areas of the Apple M1 chip* would it take to cover the *surface area of the Sun*?",
    "quality": 0.99
  },
  {
    "smaller": {
      "thing": "nuclear power",
      "measurement": "surface area",
      "name": "",
      "value": "3.0e6 m2",
      "called": "Surface area of nuclear power",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Indian Ocean",
      "measurement": "surface area",
      "name": "",
      "value": "7.0e13 m2",
      "called": "Surface area of the Indian Ocean",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many times could the *surface area of nuclear power* fit into the *surface area of the Indian Ocean*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "hydrogen atom",
      "measurement": "surface area",
      "name": "",
      "value": "1.0e-20 m2",
      "called": "Surface area of a hydrogen atom",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Betelgeuse",
      "measurement": "surface area",
      "name": "",
      "value": "9.0e23 m2",
      "called": "Surface area of Betelgeuse",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many times could you lay out the *surface area of a hydrogen atom* to cover the *surface area of Betelgeuse*?",
    "quality": 0.6
  },
  {
    "smaller": {
      "thing": "Intel 8086",
      "measurement": "surface area",
      "name": "die surface area",
      "value": "2.0e-5 m2",
      "called": "The die surface area of an Intel 8086",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "orange",
      "measurement": "surface area",
      "name": "",
      "value": "2.0e-2 m2",
      "called": "Surface area of an orange",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *Intel 8086 chips* could fit into the *surface area of an orange*?",
    "quality": 0.8
  },
  {
    "smaller": {
      "thing": "Pluto",
      "measurement": "surface area",
      "name": "",
      "value": "2.0e13 m2",
      "called": "Surface area of Pluto",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "mars",
      "measurement": "surface area",
      "name": "",
      "value": "1.0e14 m2",
      "called": "Surface area of Mars",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *Pluto surface areas* would fit into the *surface area of Mars*?",
    "quality": 0.99
  },
  {
    "smaller": {
      "thing": "Cessna 172",
      "measurement": "count",
      "name": "",
      "value": "4.0e4 units",
      "called": "Number of Cessna 172 units",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "gasoline production",
      "measurement": "count",
      "name": "barrels produced per year",
      "value": "9.0e7 barrels",
      "called": "Number of barrels of gasoline produced per year",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *Cessna 172 units* are produced for every *barrel of gasoline* produced per year?",
    "quality": 0.2
  },
  {
    "smaller": {
      "thing": "Cessna 172",
      "measurement": "count",
      "name": "",
      "value": "4.0e4 units",
      "called": "Number of Cessna 172 units",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "The Internet",
      "measurement": "count",
      "name": "",
      "value": "1.0e9 websites",
      "called": "Number of websites on the internet",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many times could the *number of Cessna 172 units* fit into the *number of websites on the internet*?",
    "quality": 0.6
  },
  {
    "smaller": {
      "thing": "panama canal",
      "measurement": "count",
      "name": "",
      "value": "4.0e-4 ships/s",
      "called": "Number of ships passing through the Panama Canal",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Cessna 172",
      "measurement": "count",
      "name": "",
      "value": "4.0e4 units",
      "called": "Number of Cessna 172 units",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *Cessna 172 units* would need to pass through the Panama Canal per second to match the *number of ships passing through the Panama Canal*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "Google",
      "measurement": "count",
      "name": "",
      "value": "1.0e5 employees",
      "called": "Employee count at Google",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "gasoline production",
      "measurement": "count",
      "name": "barrels produced per year",
      "value": "9.0e7 barrels",
      "called": "Number of barrels of gasoline produced per year",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many times does the *employee count at Google* surpass the *number of barrels of gasoline produced per year*?",
    "quality": 0.2
  },
  {
    "smaller": {
      "thing": "gasoline production",
      "measurement": "count",
      "name": "barrels produced per year",
      "value": "9.0e7 barrels",
      "called": "Number of barrels of gasoline produced per year",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "The Internet",
      "measurement": "count",
      "name": "",
      "value": "1.0e9 websites",
      "called": "Number of websites on the internet",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many barrels of gasoline produced per year are needed to power all the websites on the internet for a year?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "Google",
      "measurement": "count",
      "name": "",
      "value": "1.0e5 employees",
      "called": "Employee count at Google",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "The Internet",
      "measurement": "count",
      "name": "",
      "value": "1.0e9 websites",
      "called": "Number of websites on the internet",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *websites* are there for every *employee at Google*?",
    "quality": 1.0
  },
  {
    "smaller": {
      "thing": "f-35",
      "measurement": "length",
      "name": "wingspan",
      "value": "1.0e1 m",
      "called": "Wingspan of the F-35",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Niagra Falls",
      "measurement": "length",
      "name": "width",
      "value": "8.0e2 m",
      "called": "Width of Niagara Falls",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many times longer is the *width of Niagara Falls* compared to the *wingspan of the F-35*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "Boeing 747",
      "measurement": "length",
      "name": "length",
      "value": "7.0e1 m",
      "called": "Length of a Boeing 747",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Oort cloud",
      "measurement": "length",
      "name": "d",
      "value": "3.0e16 m",
      "called": "The given values are associated with the Oort cloud.",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many times longer is the *distance encompassed by the Oort cloud* compared to the *length of a Boeing 747*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "Daytona 500",
      "measurement": "length",
      "name": "circuit",
      "value": "4.0e3 m",
      "called": "Length of the Daytona 500 circuit",
      "quality": 1.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "voyager 2",
      "measurement": "length",
      "name": "closest distance to neptune",
      "value": "5.0e6 m",
      "called": "Voyager 2's closest distance to Neptune",
      "quality": 1.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many times could the *Daytona 500 circuit* wrap around *Voyager 2's closest distance to Neptune*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "50 cal rifle",
      "measurement": "length",
      "name": "bullet length",
      "value": "5.8e-2 m",
      "called": "Length of a .50 cal rifle bullet",
      "quality": 1.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Las Vegas Sphere",
      "measurement": "length",
      "name": "diameter",
      "value": "1.6e2 m",
      "called": "Diameter of the Las Vegas Sphere",
      "quality": 1.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *.50 cal rifle bullets* placed end to end would it take to equal the *diameter of the Las Vegas Sphere*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "largest container ship",
      "measurement": "length",
      "name": "",
      "value": "4.0e2 m",
      "called": "Length of the largest container ship",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Opportunity Rover",
      "measurement": "length",
      "name": "distance driven",
      "value": "4.5e4 m",
      "called": "Distance driven by the Opportunity Rover",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many times could the *largest container ship's length* fit into the *distance driven by the Opportunity Rover*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "50 cal rifle",
      "measurement": "length",
      "name": "bullet length",
      "value": "5.8e-2 m",
      "called": "Length of a .50 cal rifle bullet",
      "quality": 1.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "evergiven",
      "measurement": "length",
      "name": "",
      "value": "4.0e2 m",
      "called": "Length of the Ever Given",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *.50 cal rifle bullets* laid end to end would it take to match the *length of the Ever Given ship*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "blue",
      "measurement": "length",
      "name": "wavelength",
      "value": "4.7e-7 m",
      "called": "Wavelength of the color blue",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "soccer ball",
      "measurement": "length",
      "name": "circumference",
      "value": "6.9e-1 m",
      "called": "Circumference of a soccer ball",
      "quality": 1.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many times could the *wavelength of the color blue* fit into *the circumference of a soccer ball*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "evergiven",
      "measurement": "length",
      "name": "",
      "value": "4.0e2 m",
      "called": "Length of the Ever Given",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Daytona 500",
      "measurement": "length",
      "name": "circuit",
      "value": "4.0e3 m",
      "called": "Length of the Daytona 500 circuit",
      "quality": 1.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many times longer is the *length of the Daytona 500 circuit* compared to the *length of the Ever Given ship*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "largest container ship",
      "measurement": "length",
      "name": "",
      "value": "4.0e2 m",
      "called": "Length of the largest container ship",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Mediterranean Sea",
      "measurement": "length",
      "name": "avg",
      "value": "1.5e3 m",
      "called": "Average length of the Mediterranean Sea",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *largest container ships* laid end to end would it take to bridge the *average length of the Mediterranean Sea*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "mouse",
      "measurement": "length",
      "name": "including tail",
      "value": "1.5e-1 m",
      "called": "Length of a mouse (including its tail)",
      "quality": 1.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "lion",
      "measurement": "length",
      "name": "height",
      "value": "1.0e0 m",
      "called": "Height of a Lion",
      "quality": 1.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *mice (including their tails)* stacked vertically would it take to reach the *height of a Lion*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "Mediterranean Sea",
      "measurement": "length",
      "name": "avg",
      "value": "1.5e3 m",
      "called": "Average length of the Mediterranean Sea",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Earth",
      "measurement": "length",
      "name": "diameter",
      "value": "6.3e6 m",
      "called": "Diameter of Earth",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many times longer is the *Diameter of Earth* compared to the *Average length of the Mediterranean Sea*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "Mediterranean Sea",
      "measurement": "length",
      "name": "avg",
      "value": "1.5e3 m",
      "called": "Average length of the Mediterranean Sea",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "voyager 2",
      "measurement": "length",
      "name": "closest distance to neptune",
      "value": "5.0e6 m",
      "called": "Voyager 2's closest distance to Neptune",
      "quality": 1.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many times longer is *Voyager 2's closest distance to Neptune* compared to the *average length of the Mediterranean Sea*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "orange",
      "measurement": "length",
      "name": "diameter",
      "value": "7.2e-2 m",
      "called": "Diameter of an orange",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Mercury",
      "measurement": "length",
      "name": "diameter",
      "value": "4.9e6 m",
      "called": "Diameter of the planet Mercury",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *oranges* could fit across the *diameter of the planet Mercury*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "largest container ship",
      "measurement": "length",
      "name": "width",
      "value": "6.1e1 m",
      "called": "Width of the world's largest container ship",
      "quality": 1.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Moon",
      "measurement": "length",
      "name": "diameter",
      "value": "3.5e3 m",
      "called": "Diameter of the Moon",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many times wider is *the world's largest container ship* compared to *the diameter of the Moon*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "f-35",
      "measurement": "length",
      "name": "wingspan",
      "value": "1.1e1 m",
      "called": "Wingspan of the F-35 aircraft",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Moon",
      "measurement": "length",
      "name": "circumference",
      "value": "1.1e4 m",
      "called": "Circumference of the Moon",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many times longer is the *circumference of the Moon* compared to the *wingspan of the F-35 aircraft*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "James Webb Space Telescope",
      "measurement": "length",
      "name": "focal length",
      "value": "1.3e2 m",
      "called": "Focal length of the James Webb Space Telescope",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "largest container ship",
      "measurement": "length",
      "name": "",
      "value": "4.0e2 m",
      "called": "Length of the world's largest container ship",
      "quality": 1.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many times longer is the *length of the world's largest container ship* compared to the *focal length of the James Webb Space Telescope*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "f-35",
      "measurement": "length",
      "name": "range",
      "value": "2.8e6 m",
      "called": "Range of an F-35 plane",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "voyager 1",
      "measurement": "length",
      "name": "closest distance to saturn",
      "value": "1.2e8 m",
      "called": "Closest distance to Saturn by Voyager 1",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many times is the *range of an F-35 plane* greater than the *closest distance to Saturn by Voyager 1*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "evergiven",
      "measurement": "length",
      "name": "width",
      "value": "5.9e1 m",
      "called": "Width of the Ever Given ship",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "5g",
      "measurement": "length",
      "name": "wavelength",
      "value": "8.3e1 /m",
      "called": "Wavelength of 5g",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many times can the *width of the Ever Given ship* fit into the *wavelength of 5G*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "Hubble Space Telescope",
      "measurement": "length",
      "name": "distance from earth",
      "value": "5.4e5 m",
      "called": "Distance of the Hubble Space Telescope from Earth",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Concorde",
      "measurement": "length",
      "name": "range",
      "value": "7.2e6 m",
      "called": "Range of the Concorde",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many times farther is the *distance of the Hubble Space Telescope from Earth* compared to the *range of the Concorde*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "Niagra Falls",
      "measurement": "length",
      "name": "height",
      "value": "5.1e1 m",
      "called": "Height of Niagara Falls",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Mediterranean Sea",
      "measurement": "length",
      "name": "avg",
      "value": "1.5e3 m",
      "called": "Average length of the Mediterranean Sea",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many times taller is the *height of Niagara Falls* compared to the *average length of the Mediterranean Sea*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "soccer ball",
      "measurement": "length",
      "name": "diameter",
      "value": "2.2e-1 m",
      "called": "Diameter of a soccer ball",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Titanic",
      "measurement": "length",
      "name": "width",
      "value": "9.2e1 m",
      "called": "Width of the Titanic",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many times would the *diameter of a soccer ball* fit into the *width of the Titanic*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "proton",
      "measurement": "length",
      "name": "circumference",
      "value": "5.3e-15 m",
      "called": "Circumference of a proton",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Pluto's Pseudo-moon, Charon",
      "measurement": "length",
      "name": "diameter",
      "value": "6.1e5 m",
      "called": "Diameter of Pluto's Pseudo-moon, Charon",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many times could the *diameter of Pluto's Pseudo-moon, Charon* fit into the *circumference of a proton*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "Saturn V",
      "measurement": "length",
      "name": "diameter",
      "value": "1.0e1 m",
      "called": "Diameter of the Saturn V",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "voyager 1",
      "measurement": "length",
      "name": "closest distance to titan (a moon of saturn)",
      "value": "6.5e6 m",
      "called": "Closest distance of Voyager 1 to Titan",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many times could *the diameter of the Saturn V* fit between *the closest distance of Voyager 1 to Titan*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "Earth's core",
      "measurement": "length",
      "name": "diameter",
      "value": "2.4e6 m",
      "called": "Diameter of Earth's core",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "mars",
      "measurement": "length",
      "name": "diameter",
      "value": "6.4e6 m",
      "called": "Diameter of Mars",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many times would the *diameter of Mars* fit into the *diameter of Earth's core*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "50 cal rifle",
      "measurement": "length",
      "name": "bullet length",
      "value": "5.8e-2 m",
      "called": "Length of a .50 cal rifle bullet",
      "quality": 1.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "voyager 1",
      "measurement": "length",
      "name": "closest distance to titan (a moon of saturn)",
      "value": "6.5e6 m",
      "called": "Closest distance of Voyager 1 to Titan",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many times would *the length of a .50 cal rifle bullet* go into *the closest distance of Voyager 1 to Titan*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "Saturn V",
      "measurement": "length",
      "name": "diameter",
      "value": "1.0e1 m",
      "called": "Diameter of the Saturn V",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "mars",
      "measurement": "length",
      "name": "diameter",
      "value": "6.4e6 m",
      "called": "Diameter of Mars",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many times could you fit the *diameter of Mars* into the *diameter of the Saturn V rocket*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "Earth's core",
      "measurement": "length",
      "name": "diameter",
      "value": "2.4e6 m",
      "called": "Diameter of Earth's core",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "voyager 1",
      "measurement": "length",
      "name": "closest distance to titan (a moon of saturn)",
      "value": "6.5e6 m",
      "called": "Closest distance of Voyager 1 to Titan",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many times would the *diameter of Earth's core* fit into the *closest distance of Voyager 1 to Titan*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "mantis shrimp",
      "measurement": "length",
      "name": "",
      "value": "1.0e-1 m",
      "called": "Length of a mantis shrimp",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Atlantic Ocean",
      "measurement": "length",
      "name": "avg",
      "value": "3.6e3 m",
      "called": "Average length of the Atlantic Ocean",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *mantis shrimps* would need to be lined up to match the *average length of the Atlantic Ocean*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "hair dryer",
      "measurement": "length",
      "name": "",
      "value": "3.0e-1 m",
      "called": "Length of a hair dryer",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "panama canal",
      "measurement": "length",
      "name": "",
      "value": "8.2e4 m",
      "called": "Length of the Panama Canal",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *hair dryers* laid end to end would it take to match the *length of the Panama Canal*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "Largest Redwood",
      "measurement": "length",
      "name": "height",
      "value": "1.2e2 m",
      "called": "Height of the largest Redwood tree",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Oort cloud",
      "measurement": "length",
      "name": "d",
      "value": "3.0e16 m",
      "called": "Size of the Oort Cloud",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many times would the height of *the largest Redwood tree* fit into *the size of the Oort Cloud*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "uvb",
      "measurement": "length",
      "name": "wavelength",
      "value": "3.0e-7 m",
      "called": "Wavelength of UVB radiation",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "space shuttle",
      "measurement": "length",
      "name": "",
      "value": "5.6e1 m",
      "called": "Length of a space shuttle",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *wavelengths of UVB radiation* could fit along the *length of a space shuttle*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "glucose molecule",
      "measurement": "length",
      "name": "",
      "value": "1.5e-9 m",
      "called": "Length of a glucose molecule",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "largest container ship",
      "measurement": "length",
      "name": "",
      "value": "4.0e2 m",
      "called": "Length of the world's largest container ship",
      "quality": 1.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *glucose molecules* laid end-to-end would it take to match the *length of the world's largest container ship*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "Hubble Space Telescope",
      "measurement": "length",
      "name": "distance from earth",
      "value": "5.4e5 m",
      "called": "Distance of the Hubble Space Telescope from Earth",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Uranus",
      "measurement": "length",
      "name": "circumference",
      "value": "1.6e8 m",
      "called": "Circumference of Uranus",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many times bigger is the *circumference of Uranus* compared to the *distance of the Hubble Space Telescope from Earth*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "hydrogen atom",
      "measurement": "length",
      "name": "diameter",
      "value": "6.2e-11 m",
      "called": "Diameter of a hydrogen atom",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "space shuttle",
      "measurement": "length",
      "name": "wingspan",
      "value": "2.4e1 m",
      "called": "Wingspan of the space shuttle",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *hydrogen atom diameters* would it take to span the *wingspan of the space shuttle*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "blue whale",
      "measurement": "length",
      "name": "",
      "value": "3.0e1 m",
      "called": "Length of a blue whale",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Milky Way",
      "measurement": "length",
      "name": "d",
      "value": "9.5e20 m",
      "called": "Diameter of the Milky Way",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many times longer is the *diameter of the Milky Way* compared to the *length of a blue whale*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "tennis ball",
      "measurement": "length",
      "name": "diameter",
      "value": "6.7e-2 m",
      "called": "Diameter of a tennis ball",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Titanic",
      "measurement": "length",
      "name": "",
      "value": "2.7e2 m",
      "called": "Length of the Titanic",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *diameters of a tennis ball* would it take to equal *the length of the Titanic*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "Boeing 747",
      "measurement": "length",
      "name": "wingspan",
      "value": "6.0e1 m",
      "called": "Wingspan of a Boeing 747",
      "quality": 1.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Mediterranean Sea",
      "measurement": "length",
      "name": "max length",
      "value": "5.1e3 m",
      "called": "Maximum length of the Mediterranean Sea",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many times larger is the *wingspan of a Boeing 747* compared to the *maximum length of the Mediterranean Sea*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "lake Baikal",
      "measurement": "length",
      "name": "",
      "value": "6.4e5 m",
      "called": "Length of Lake Baikal",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Betelgeuse",
      "measurement": "length",
      "name": "circumference",
      "value": "1.7e12 m",
      "called": "Circumference of Betelgeuse",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many times longer is the *Circumference of Betelgeuse* compared to the *Length of Lake Baikal*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "tennis ball",
      "measurement": "length",
      "name": "circumference",
      "value": "2.1e-1 m",
      "called": "Circumference of a tennis ball",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "f-35",
      "measurement": "length",
      "name": "",
      "value": "1.6e1 m",
      "called": "Length of the F-35",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many times could you place the *circumference of a tennis ball* along the *length of an F-35 jet*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "Fat Man bomb",
      "measurement": "length",
      "name": "diameter",
      "value": "7.1e-1 m",
      "called": "Diameter of the Fat Man bomb",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Largest wind turbine in the world",
      "measurement": "length",
      "name": "rotor length",
      "value": "1.3e2 m",
      "called": "Rotor length of the world's largest wind turbine",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many times could the *diameter of the Fat Man bomb* fit into the *rotor length of the world's largest wind turbine*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "Stratosphere",
      "measurement": "length",
      "name": "thickness",
      "value": "5.0e4 m",
      "called": "Thickness of the stratosphere",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Uranus",
      "measurement": "length",
      "name": "diameter",
      "value": "5.1e7 m",
      "called": "Diameter of Uranus",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many times could the *thickness of the stratosphere* wrap around the *diameter of Uranus*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "Eiffel Tower",
      "measurement": "length",
      "name": "",
      "value": "3.3e2 m",
      "called": "Height of the Eiffel Tower",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Mediterranean Sea",
      "measurement": "length",
      "name": "max length",
      "value": "5.1e3 m",
      "called": "Maximum length of the Mediterranean Sea",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many times taller is the *Eiffel Tower* compared to the *maximum length of the Mediterranean Sea*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "watermelon",
      "measurement": "length",
      "name": "circumference",
      "value": "9.4e-1 m",
      "called": "Circumference of a watermelon",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Las Vegas Sphere",
      "measurement": "length",
      "name": "height",
      "value": "1.1e2 m",
      "called": "Height of the Las Vegas Sphere",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many times could you wrap the *circumference of a watermelon* around the *height of the Las Vegas Sphere*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "Fat Man bomb",
      "measurement": "length",
      "name": "diameter",
      "value": "7.1e-1 m",
      "called": "Diameter of the Fat Man bomb",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Saturn V",
      "measurement": "length",
      "name": "",
      "value": "1.1e2 m",
      "called": "Length of the Saturn V",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many times would the *diameter of the Fat Man bomb* fit into the *length of the Saturn V rocket*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "proton",
      "measurement": "length",
      "name": "diameter",
      "value": "1.7e-15 m",
      "called": "Diameter of a proton",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Concorde",
      "measurement": "length",
      "name": "range",
      "value": "7.2e6 m",
      "called": "Range of the Concorde",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *diameters of a proton* would fit into the *range of the Concorde*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "mouse",
      "measurement": "length",
      "name": "including tail",
      "value": "1.5e-1 m",
      "called": "Length of a mouse (including its tail)",
      "quality": 1.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Moon",
      "measurement": "length",
      "name": "diameter",
      "value": "3.5e3 m",
      "called": "Diameter of the Moon",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *mice* laid end to end would it take to span the *diameter of the Moon*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "lion",
      "measurement": "length",
      "name": "height",
      "value": "1.0e0 m",
      "called": "Height of a Lion",
      "quality": 1.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Fat Man bomb",
      "measurement": "length",
      "name": "",
      "value": "3.3e0 m",
      "called": "Length of the Fat Man bomb",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many times longer is the *length of the Fat Man bomb* compared to the *height of a Lion*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "Bluetooth",
      "measurement": "length",
      "name": "range",
      "value": "1.0e1 m",
      "called": "Range of Bluetooth signal",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "voyager 2",
      "measurement": "length",
      "name": "closest distance to jupiter",
      "value": "5.7e8 m",
      "called": "Closest distance of Voyager 2 to Jupiter",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *Bluetooth signal ranges* would it take to cover the closest distance *Voyager 2* came to *Jupiter*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "Moon",
      "measurement": "mass",
      "name": "",
      "value": "7.3e25 g",
      "called": "Mass of the Moon",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Observable Universe",
      "measurement": "mass",
      "name": "",
      "value": "1.5e56 g",
      "called": "Total mass of the Observable Universe",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many times does the *mass of the Moon* fit into the *total mass of the Observable Universe*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "Total amount of gold ever mined",
      "measurement": "mass",
      "name": "",
      "value": "2.1e11 g",
      "called": "Total mass of gold ever mined",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "evergiven",
      "measurement": "mass",
      "name": "",
      "value": "2.4e11 g",
      "called": "Mass of the Ever Given",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How does the *mass of gold ever mined* compare to the *mass of the Ever Given* container ship?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "Little Boy bomb",
      "measurement": "mass",
      "name": "",
      "value": "4.4e6 g",
      "called": "Mass of the Little Boy bomb",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Pyramid of Giza",
      "measurement": "mass",
      "name": "",
      "value": "6.0e12 g",
      "called": "Mass of the Pyramid of Giza",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *Little Boy bombs* would it take to equal the *mass of the Pyramid of Giza*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "Honda CR-V",
      "measurement": "mass",
      "name": "",
      "value": "1.6e6 g",
      "called": "Mass of a Honda CR-V",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Taj Mahal",
      "measurement": "mass",
      "name": "",
      "value": "1.2e10 g",
      "called": "Weight of the Taj Mahal",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *Honda CR-Vs* would it take to match the weight of *the Taj Mahal*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "f-35",
      "measurement": "mass",
      "name": "gross weight",
      "value": "2.2e7 g",
      "called": "Gross weight of the F-35",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Humans",
      "measurement": "mass",
      "name": "all",
      "value": "3.9e14 g",
      "called": "Total mass of all humans",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many times heavier is *the total mass of all humans* compared to *the gross weight of the F-35 aircraft*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "Statue of Liberty",
      "measurement": "mass",
      "name": "",
      "value": "2.0e8 g",
      "called": "Mass of the Statue of Liberty",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "lake Michigan",
      "measurement": "mass",
      "name": "",
      "value": "4.9e18 g",
      "called": "Mass of Lake Michigan",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many times heavier is *Lake Michigan* compared to the *Statue of Liberty*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "Mars Helicopter Ingenuity",
      "measurement": "mass",
      "name": "",
      "value": "1.8e3 g",
      "called": "Mass of the Mars Helicopter Ingenuity",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Michael Phelps",
      "measurement": "mass",
      "name": "",
      "value": "8.8e4 g",
      "called": "Mass of Michael Phelps",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many times heavier is *Michael Phelps* compared to the *Mars Helicopter Ingenuity*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "Water",
      "measurement": "mass",
      "name": "1 molecule",
      "value": "3.0e-23 g",
      "called": "Mass of one water molecule",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Humans",
      "measurement": "mass",
      "name": "all",
      "value": "3.9e14 g",
      "called": "Total mass of all humans",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *water molecules* are equivalent in mass to the *total mass of all humans*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "hydrogen atom",
      "measurement": "mass",
      "name": "",
      "value": "1.7e-24 g",
      "called": "Mass of a hydrogen atom",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Atlantic Ocean",
      "measurement": "mass",
      "name": "",
      "value": "3.1e29 m3",
      "called": "Volume of the Atlantic Ocean",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *hydrogen atoms* are estimated to fit into *the volume of the Atlantic Ocean* based on their individual masses?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "glucose molecule",
      "measurement": "mass",
      "name": "",
      "value": "3.0e-22 g",
      "called": "Mass of a glucose molecule",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "neutron star",
      "measurement": "mass",
      "name": "min mass",
      "value": "2.2e33 g",
      "called": "Minimum mass of a neutron star",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *glucose molecules* would need to combine to match the *minimum mass of a neutron star*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "Pluto's Pseudo-moon, Charon",
      "measurement": "mass",
      "name": "",
      "value": "1.6e24 g",
      "called": "Mass of Charon, Pluto's pseudo-moon",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Betelgeuse",
      "measurement": "mass",
      "name": "",
      "value": "3.3e34 g",
      "called": "Mass of Betelgeuse",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many times heavier is *Betelgeuse* compared to *Charon, Pluto's pseudo-moon*, in terms of their mass?",
    "quality": 0.6
  },
  {
    "smaller": {
      "thing": "Opportunity Rover",
      "measurement": "mass",
      "name": "",
      "value": "1.8e5 g",
      "called": "Mass of the Opportunity Rover",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Milky Way",
      "measurement": "mass",
      "name": "",
      "value": "3.0e45 g",
      "called": "Mass of the Milky Way",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *Opportunity Rovers* would it take to match the *mass of the Milky Way* galaxy?",
    "quality": 0.99
  },
  {
    "smaller": {
      "thing": "glucose molecule",
      "measurement": "mass",
      "name": "",
      "value": "3.0e-22 g",
      "called": "Mass of a glucose molecule",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Mercury (Element)",
      "measurement": "mass",
      "name": "1 atom",
      "value": "3.3e-22 g",
      "called": "Mass of one atom of Mercury (Element)",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How does the *mass of a glucose molecule* compare to the *mass of one atom of Mercury* in terms of order of magnitude?",
    "quality": 0.6
  },
  {
    "smaller": {
      "thing": "asian elephant",
      "measurement": "mass",
      "name": "",
      "value": "3.2e6 g",
      "called": "Mass of an Asian elephant",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Concorde",
      "measurement": "mass",
      "name": "fuel capacity",
      "value": "9.6e7 g",
      "called": "Fuel capacity of the Concorde",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *Asian elephants* would it take to have the same total *fuel capacity as the Concorde*?",
    "quality": 0.4
  },
  {
    "smaller": {
      "thing": "iphone 15",
      "measurement": "mass",
      "name": "",
      "value": "1.7e2 g",
      "called": "Mass of an iPhone 15",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Airbus A380",
      "measurement": "mass",
      "name": "maximum take-off weight",
      "value": "5.8e8 g",
      "called": "Maximum take-off weight of an Airbus A380",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *iPhone 15s* could an *Airbus A380* carry?",
    "quality": 1.0
  },
  {
    "smaller": {
      "thing": "kiloton",
      "measurement": "mass",
      "name": "",
      "value": "1.0e6 g",
      "called": "Mass of a kiloton",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Airbus A380",
      "measurement": "mass",
      "name": "",
      "value": "5.8e8 g",
      "called": "Mass of an Airbus A380",
      "quality": 1.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *kilotons* does an *Airbus A380* weigh?",
    "quality": 1.0
  },
  {
    "smaller": {
      "thing": "Mercury (Element)",
      "measurement": "mass",
      "name": "1 atom",
      "value": "3.3e-22 g",
      "called": "Mass of one atom of Mercury (Element)",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Mars Helicopter Ingenuity",
      "measurement": "mass",
      "name": "",
      "value": "1.8e3 g",
      "called": "Mass of the Mars Helicopter Ingenuity",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "The *Mars Helicopter Ingenuity* weighs as much as how many *atoms of Mercury*?",
    "quality": 1.0
  },
  {
    "smaller": {
      "thing": "proton",
      "measurement": "mass",
      "name": "",
      "value": "1.7e-24 g",
      "called": "Mass of a proton",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "f-35",
      "measurement": "mass",
      "name": "max mass",
      "value": "3.0e7 g",
      "called": "Maximum mass of the F-35",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "An *F-35 jet* weighs as much as how many *protons*?",
    "quality": 1.0
  },
  {
    "smaller": {
      "thing": "space shuttle",
      "measurement": "mass",
      "name": "max paylod to iss",
      "value": "1.6e7 g",
      "called": "Maximum payload to the International Space Station (ISS) of the space shuttle",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "All rivers in the world",
      "measurement": "mass",
      "name": "",
      "value": "2.1e18 g",
      "called": "Total mass of all the rivers in the world",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *space shuttle flights* would it take to get the mass of *all the rivers in the world* to the *ISS*?",
    "quality": 1.0
  },
  {
    "smaller": {
      "thing": "Honda CR-V",
      "measurement": "mass",
      "name": "",
      "value": "1.6e6 g",
      "called": "Mass of a Honda CR-V",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Airbus A380",
      "measurement": "mass",
      "name": "maximum take-off weight",
      "value": "5.8e8 g",
      "called": "Maximum take-off weight of an Airbus A380",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *Honda CR-Vs* could an *Airbus A380* carry, assuming the CR-Vs take up no volume?",
    "quality": 1.0
  },
  {
    "smaller": {
      "thing": "Water",
      "measurement": "mass",
      "name": "1 molecule",
      "value": "3.0e-23 g",
      "called": "Mass of one water molecule",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Empire State Building",
      "measurement": "mass",
      "name": "",
      "value": "3.3e11 g",
      "called": "Mass of the Empire State Building",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "The *Empire State Building* weighs as much as how many *water molecules*?",
    "quality": 1.0
  },
  {
    "smaller": {
      "thing": "orange",
      "measurement": "mass",
      "name": "",
      "value": "9.6e1 g",
      "called": "Mass of an orange",
      "quality": 1.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Frozen fresh water in the world",
      "measurement": "mass",
      "name": "",
      "value": "2.4e22 g",
      "called": "Total mass of frozen fresh water in the world",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "What is the mass of *all frozen fresh water in the world*, measured in *oranges*?",
    "quality": 1.0
  },
  {
    "smaller": {
      "thing": "Water",
      "measurement": "mass",
      "name": "1 molecule",
      "value": "3.0e-23 g",
      "called": "Mass of one water molecule",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Airbus A380",
      "measurement": "mass",
      "name": "maximum take-off weight",
      "value": "5.8e8 g",
      "called": "Maximum take-off weight of an Airbus A380",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *water molecules* would it take to equal the *maximum take-off weight of an Airbus A380*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "orange",
      "measurement": "mass",
      "name": "",
      "value": "9.6e1 g",
      "called": "Mass of an orange",
      "quality": 1.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Empire State Building",
      "measurement": "mass",
      "name": "",
      "value": "3.3e11 g",
      "called": "Mass of the Empire State Building",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *oranges* would it take to match the *mass of the Empire State Building*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "football",
      "measurement": "mass",
      "name": "",
      "value": "4.2e2 g",
      "called": "Mass of a football",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Frozen fresh water in the world",
      "measurement": "mass",
      "name": "",
      "value": "2.4e22 g",
      "called": "Total mass of frozen fresh water in the world",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *football balls* could be made from the *total mass of frozen fresh water in the world*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "blue whale",
      "measurement": "mass",
      "name": "",
      "value": "1.5e8 g",
      "called": "Mass of a Blue Whale",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Liquid fresh water in the world",
      "measurement": "mass",
      "name": "",
      "value": "1.1e22 g",
      "called": "Mass of liquid fresh water on Earth",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *Blue Whales* would it take to weigh the same as the *mass of liquid fresh water on Earth*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "trinity test",
      "measurement": "mass",
      "name": "",
      "value": "1.9e8 g",
      "called": "Mass of the Trinity Test",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Earth's core",
      "measurement": "mass",
      "name": "",
      "value": "9.9e25 g",
      "called": "Mass of Earth's core",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many times heavier is the mass of *Earth's core* compared to the mass of the *Trinity Test*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "proton",
      "measurement": "mass",
      "name": "",
      "value": "1.7e-24 g",
      "called": "Mass of a proton",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "macbook (which?)",
      "measurement": "mass",
      "name": "",
      "value": "1.4e3 g",
      "called": "Mass of a MacBook",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *protons* are there in the mass of a *MacBook*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "Mars Helicopter Ingenuity",
      "measurement": "mass",
      "name": "",
      "value": "1.8e3 g",
      "called": "Mass of the Mars Helicopter Ingenuity",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "neutron star",
      "measurement": "mass",
      "name": "max mass",
      "value": "4.3e33 g",
      "called": "Maximum mass of a neutron star",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *Mars Helicopter Ingenuity* drones would need to be combined to match the *maximum mass of a neutron star*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "Airbus A380",
      "measurement": "mass",
      "name": "maximum take-off weight",
      "value": "5.8e8 g",
      "called": "Maximum take-off weight of an Airbus A380",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Earth's core",
      "measurement": "mass",
      "name": "",
      "value": "9.9e25 g",
      "called": "Mass of Earth's core",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *Airbus A380s* would it take to equal the *mass of Earth's core*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "football",
      "measurement": "mass",
      "name": "",
      "value": "4.2e2 g",
      "called": "Mass of a football",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Taj Mahal",
      "measurement": "mass",
      "name": "",
      "value": "1.2e10 g",
      "called": "Weight of the Taj Mahal",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *football* balls would it take to match the *weight of the Taj Mahal*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "Boeing 747",
      "measurement": "mass",
      "name": "maximum take-off weight",
      "value": "3.4e8 g",
      "called": "Maximum take-off weight of a Boeing 747",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Oort cloud",
      "measurement": "mass",
      "name": "outer cloud",
      "value": "3.0e28 g",
      "called": "Mass of the Oort Cloud",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *Boeing 747s* would need to take off to match the *mass of the Oort Cloud*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "football",
      "measurement": "mass",
      "name": "",
      "value": "4.2e2 g",
      "called": "Mass of a football",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Liquid fresh water in the world",
      "measurement": "mass",
      "name": "",
      "value": "1.1e22 g",
      "called": "Mass of liquid fresh water on Earth",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *football masses* would it take to equate the *mass of liquid fresh water on Earth*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "blue whale",
      "measurement": "mass",
      "name": "",
      "value": "1.5e8 g",
      "called": "Mass of a Blue Whale",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Earth's core",
      "measurement": "mass",
      "name": "",
      "value": "9.9e25 g",
      "called": "Mass of Earth's core",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *Blue Whales* would it take to match the *mass of Earth's core*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "proton",
      "measurement": "mass",
      "name": "",
      "value": "1.7e-24 g",
      "called": "Mass of a proton",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "trinity test",
      "measurement": "mass",
      "name": "",
      "value": "1.9e8 g",
      "called": "Mass of the Trinity Test",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *protons* would weigh the same as the *mass of the Trinity Test*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "macbook (which?)",
      "measurement": "mass",
      "name": "",
      "value": "1.4e3 g",
      "called": "Mass of a MacBook",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "neutron star",
      "measurement": "mass",
      "name": "max mass",
      "value": "4.3e33 g",
      "called": "Maximum mass of a neutron star",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *MacBooks* would it take to match the *maximum mass of a neutron star*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "Mars Helicopter Ingenuity",
      "measurement": "mass",
      "name": "",
      "value": "1.8e3 g",
      "called": "Mass of the Mars Helicopter Ingenuity",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Earth's core",
      "measurement": "mass",
      "name": "",
      "value": "9.9e25 g",
      "called": "Mass of Earth's core",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many times heavier is Earth's core compared to the *Mars Helicopter Ingenuity*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "Airbus A380",
      "measurement": "mass",
      "name": "maximum take-off weight",
      "value": "5.8e8 g",
      "called": "Maximum take-off weight of an Airbus A380",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Taj Mahal",
      "measurement": "mass",
      "name": "",
      "value": "1.2e10 g",
      "called": "Weight of the Taj Mahal",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *Taj Mahals* would it take to equal the *maximum take-off weight of an Airbus A380*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "football",
      "measurement": "mass",
      "name": "",
      "value": "4.2e2 g",
      "called": "Mass of a football",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Oort cloud",
      "measurement": "mass",
      "name": "outer cloud",
      "value": "3.0e28 g",
      "called": "Mass of the Oort Cloud",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "If each *football* represented a standard unit of mass, how many *footballs* would it take to match the mass of the *Oort Cloud*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "Boeing 747",
      "measurement": "mass",
      "name": "maximum take-off weight",
      "value": "3.4e8 g",
      "called": "Maximum take-off weight of a Boeing 747",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Liquid fresh water in the world",
      "measurement": "mass",
      "name": "",
      "value": "1.1e22 g",
      "called": "Mass of liquid fresh water on Earth",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many times does the *maximum take-off weight of a Boeing 747* compare to the *mass of liquid fresh water on Earth*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "soccer ball",
      "measurement": "mass",
      "name": "",
      "value": "4.3e2 g",
      "called": "Mass of a soccer ball",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "neutron star",
      "measurement": "mass",
      "name": "max mass",
      "value": "4.3e33 g",
      "called": "Maximum mass of a neutron star",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *soccer balls* would it take to match the *maximum mass of a neutron star*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "Mars Helicopter Ingenuity",
      "measurement": "mass",
      "name": "",
      "value": "1.8e3 g",
      "called": "Mass of the Mars Helicopter Ingenuity",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "James Webb Space Telescope",
      "measurement": "mass",
      "name": "",
      "value": "6.5e6 g",
      "called": "Mass of the James Webb Space Telescope",
      "quality": 1.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many times heavier is the *James Webb Space Telescope* compared to the *Mars Helicopter Ingenuity*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "22 cal rifle",
      "measurement": "mass",
      "name": "bullet",
      "value": "2.1e0 g",
      "called": "Mass of a .22 caliber rifle bullet",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Honda CR-V",
      "measurement": "mass",
      "name": "",
      "value": "1.6e6 g",
      "called": "Mass of a Honda CR-V",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *.22 caliber rifle bullets* would it take to match the *mass of a Honda CR-V*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "largest deadlift",
      "measurement": "mass",
      "name": "",
      "value": "5.8e5 g",
      "called": "Maximum weight lifted in the largest deadlift",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Liquid fresh water in the world",
      "measurement": "mass",
      "name": "",
      "value": "1.1e22 g",
      "called": "Mass of liquid fresh water on Earth",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *repetitions* of the largest deadlift weight would it take to lift the *mass of liquid fresh water on Earth*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "orange",
      "measurement": "mass",
      "name": "",
      "value": "9.6e1 g",
      "called": "Mass of an orange",
      "quality": 1.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Saturn",
      "measurement": "mass",
      "name": "rings",
      "value": "1.3e16 s",
      "called": "Incorrectly shared measurement information for Saturn with value from another category.",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How much heavier is an *orange* in grams compared to the *altered measurement data* mistakenly given for Saturn in another unit?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "hydrogen atom",
      "measurement": "mass",
      "name": "",
      "value": "1.7e-24 g",
      "called": "Mass of a hydrogen atom",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "ping pong ball",
      "measurement": "mass",
      "name": "",
      "value": "2.7e0 g",
      "called": "Mass of a ping pong ball",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *ping pong balls* are equivalent in mass to a *hydrogen atom*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "Hubble Space Telescope",
      "measurement": "mass",
      "name": "",
      "value": "1.1e7 g",
      "called": "Mass of the Hubble Space Telescope",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "The Atmosphere",
      "measurement": "mass",
      "name": "",
      "value": "5.2e21 g",
      "called": "Mass of the Earth's atmosphere",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *Hubble Space Telescopes* would it take to match the *mass of the Earth's atmosphere*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "iphone 15",
      "measurement": "mass",
      "name": "battery",
      "value": "5.0e1 g",
      "called": "Mass of the battery in an iPhone 15",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Moon",
      "measurement": "mass",
      "name": "",
      "value": "7.3e25 g",
      "called": "Mass of the Moon",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *iPhone 15 battery masses* would it take to match the mass of the *Moon*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "Mars Helicopter Ingenuity",
      "measurement": "mass",
      "name": "",
      "value": "1.8e3 g",
      "called": "Mass of the Mars Helicopter Ingenuity",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "The Atmosphere",
      "measurement": "mass",
      "name": "",
      "value": "5.2e21 g",
      "called": "Mass of the Earth's atmosphere",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *Mars Helicopter Ingenuity* would it take to match the *mass of the Earth's atmosphere*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "Largest wind turbine in the world",
      "measurement": "mass",
      "name": "each blade",
      "value": "5.4e1 tons",
      "called": "Mass of each blade of the largest wind turbine in the world",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Airbus A380",
      "measurement": "mass",
      "name": "",
      "value": "5.8e8 g",
      "called": "Mass of an Airbus A380",
      "quality": 1.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *blades of the largest wind turbine* would it take to equal the *mass of an Airbus A380*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "macbook (which?)",
      "measurement": "mass",
      "name": "",
      "value": "1.4e3 g",
      "called": "Mass of a MacBook",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "enola gay",
      "measurement": "mass",
      "name": "",
      "value": "3.4e7 g",
      "called": "Mass of the Enola Gay",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *MacBooks* weigh the same as the *Enola Gay* aircraft?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "f-35",
      "measurement": "mass",
      "name": "max mass",
      "value": "3.0e7 g",
      "called": "Maximum mass of the F-35",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Liquid fresh water in the world",
      "measurement": "mass",
      "name": "",
      "value": "1.1e22 g",
      "called": "Mass of liquid fresh water on Earth",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *F-35s* would it take to weigh the same as *all the liquid fresh water on Earth*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "iphone 15",
      "measurement": "mass",
      "name": "battery",
      "value": "5.0e1 g",
      "called": "Mass of the battery in an iPhone 15",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Water in the world",
      "measurement": "mass",
      "name": "",
      "value": "1.4e24 g",
      "called": "Mass of all water in the world",
      "quality": 1.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *iPhone 15 battery masses* does the *mass of all water in the world* equal?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "Water",
      "measurement": "mass",
      "name": "1 molecule",
      "value": "3.0e-23 g",
      "called": "Mass of one water molecule",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "house cat",
      "measurement": "mass",
      "name": "",
      "value": "4.0e3 g",
      "called": "Mass of a house cat",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *water molecules* would it take to match the *mass of a house cat*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "gasoline production",
      "measurement": "mass",
      "name": "",
      "value": "3.8e5 g/s",
      "called": "Rate of gasoline production",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "neutron star",
      "measurement": "mass",
      "name": "min mass",
      "value": "2.2e33 g",
      "called": "Minimum mass of a neutron star",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *seconds* would it take to produce the minimum mass of a *neutron star* at the given *rate of gasoline production*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "usain bolt",
      "measurement": "mass",
      "name": "",
      "value": "9.4e4 g",
      "called": "Mass of Usain Bolt",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "f-35",
      "measurement": "mass",
      "name": "fuel capacity",
      "value": "8.0e6 g",
      "called": "Fuel capacity of the F-35",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *Usain Bolts* could the *F-35* fuel capacity weigh?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "orange",
      "measurement": "mass",
      "name": "",
      "value": "9.6e1 g",
      "called": "Mass of an orange",
      "quality": 1.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Airbus A380",
      "measurement": "mass",
      "name": "maximum take-off weight",
      "value": "5.8e8 g",
      "called": "Maximum take-off weight of an Airbus A380",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *oranges* would fit into the *maximum take-off weight of an Airbus A380*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "lake Ontario",
      "measurement": "mass",
      "name": "",
      "value": "1.6e18 g",
      "called": "Mass of Lake Ontario",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "All rivers in the world",
      "measurement": "mass",
      "name": "",
      "value": "2.1e18 g",
      "called": "Total mass of all the rivers in the world",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *Lake Ontarios* weigh the same as *all the rivers in the world*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "Pyramid of Giza",
      "measurement": "surface area",
      "name": "",
      "value": "8.5e4 m2",
      "called": "Surface area of the Pyramid of Giza",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Largest solar plant",
      "measurement": "surface area",
      "name": "",
      "value": "5.6e7 m2",
      "called": "Surface area of the largest solar plant",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many times could the *surface area of the Pyramid of Giza* fit into the *surface area of the largest solar plant*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "Golf ball",
      "measurement": "surface area",
      "name": "",
      "value": "5.7e-3 m2",
      "called": "Surface area of a golf ball",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Earth",
      "measurement": "surface area",
      "name": "water",
      "value": "3.6e14 m2",
      "called": "Surface area of water on Earth",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *golf ball surface areas* would it take to cover the *surface area of water on Earth*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "Penny",
      "measurement": "surface area",
      "name": "face area",
      "value": "2.8e-4 m2",
      "called": "Surface area of the face of a penny",
      "quality": 1.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Americas",
      "measurement": "surface area",
      "name": "",
      "value": "4.2e13 m2",
      "called": "Total surface area of the Americas",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *penny face surface areas* would it take to match the *total surface area of the Americas*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "nuclear power",
      "measurement": "surface area",
      "name": "",
      "value": "3.4e6 m2",
      "called": "Surface area of a nuclear power plant",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Mediterranean Sea",
      "measurement": "surface area",
      "name": "",
      "value": "2.5e12 m2",
      "called": "Surface area of the Mediterranean Sea",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many times could the *surface area of a nuclear power plant* fit into the *surface area of the Mediterranean Sea*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "blue whale",
      "measurement": "volume",
      "name": "",
      "value": "8.7e1 m3",
      "called": "Volume of a blue whale",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Sun",
      "measurement": "volume",
      "name": "",
      "value": "1.4e27 m3",
      "called": "Volume of the Sun",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many times could the *volume of a blue whale* fit into the *volume of the Sun*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "macbook (which?)",
      "measurement": "volume",
      "name": "",
      "value": "7.3e-4 m3",
      "called": "Volume of a MacBook",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Olympic swimming pool",
      "measurement": "volume",
      "name": "",
      "value": "2.5e3 m3",
      "called": "Volume of an Olympic-sized swimming pool",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many times could the *volume of a MacBook* fit into an *Olympic-sized swimming pool*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "Pluto",
      "measurement": "volume",
      "name": "",
      "value": "7.1e18 m3",
      "called": "Volume of Pluto",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Milky Way",
      "measurement": "volume",
      "name": "",
      "value": "6.7e60 m3",
      "called": "Volume of the Milky Way",
      "quality": 1.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many times could the *volume of Pluto* fit into the *volume of the Milky Way galaxy*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "Fat Man bomb",
      "measurement": "volume",
      "name": "",
      "value": "1.8e0 m3",
      "called": "Volume of the Fat Man bomb",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Betelgeuse",
      "measurement": "volume",
      "name": "",
      "value": "1.1e30 m3",
      "called": "Volume of Betelgeuse",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *Fat Man bombs* could fit into the *volume of Betelgeuse*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "glucose molecule",
      "measurement": "length",
      "name": "",
      "value": "1.5e-9 m",
      "called": "Length of a glucose molecule",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Neptune",
      "measurement": "length",
      "name": "circumference",
      "value": "7.7e7 m",
      "called": "Circumference of Neptune",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *glucose molecules* laid end to end would it take to circumnavigate *Neptune*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "Penny",
      "measurement": "length",
      "name": "diameter",
      "value": "1.9e-2 m",
      "called": "Diameter of a Penny",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Largest Redwood",
      "measurement": "length",
      "name": "height",
      "value": "1.2e2 m",
      "called": "Height of the largest Redwood tree",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *penny diameters* would it take to match the *height of the largest Redwood tree*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "basketball",
      "measurement": "length",
      "name": "circumference",
      "value": "7.5e-1 m",
      "called": "Circumference of a basketball",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Titanic",
      "measurement": "length",
      "name": "",
      "value": "2.7e2 m",
      "called": "Length of the Titanic",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many times could you wrap *the circumference of a basketball* around the *length of the Titanic*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "Penny",
      "measurement": "length",
      "name": "diameter",
      "value": "1.9e-2 m",
      "called": "Diameter of a Penny",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Nile River",
      "measurement": "length",
      "name": "",
      "value": "6.7e6 m",
      "called": "Length of the Nile River",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *penny diameters* would it take to span *the length of the Nile River*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "Little Boy bomb",
      "measurement": "count",
      "name": "",
      "value": "6.0e0",
      "called": "Number of Little Boy bombs",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "glucose molecule",
      "measurement": "count",
      "name": "hydrogen atoms",
      "value": "1.2e1",
      "called": "Number of hydrogen atoms in a glucose molecule",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *hydrogen atoms in a glucose molecule* does each *Little Boy bomb* have?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "Ben & Jerry's Ice Cream",
      "measurement": "count",
      "name": "flavors",
      "value": "9.8e1",
      "called": "Number of flavors of Ben & Jerry's Ice Cream",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Humans",
      "measurement": "count",
      "name": "population",
      "value": "8.1e9",
      "called": "World population of humans",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *flavors of Ben & Jerry's Ice Cream* are there for every *person on Earth*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "wind power",
      "measurement": "count",
      "name": "number of wind turbines in the us",
      "value": "9.0e4",
      "called": "Number of wind turbines in the United States for wind power",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "year",
      "measurement": "count",
      "name": "",
      "value": "1.4e9",
      "called": "Duration of 1.4 billion years",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *years* would each *wind turbine in the United States for wind power* have to operate in order to cover a *duration of 1.4 billion years*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "International Space Station",
      "measurement": "count",
      "name": "orbits",
      "value": "1.5e5",
      "called": "Number of times the ISS has orbited Earth",
      "quality": 1.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "grains of sand",
      "measurement": "count",
      "name": "",
      "value": "7.5e18",
      "called": "Number of grains of sand",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *grains of sand* are there for each *orbit of the International Space Station around Earth*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "proton",
      "measurement": "length",
      "name": "diameter",
      "value": "1.7e-15 m",
      "called": "Diameter of a proton",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Water",
      "measurement": "length",
      "name": "1 molecule",
      "value": "3.0e-10",
      "called": "Size of a water molecule",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *proton diameters* would fit across the *size of a water molecule*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "Cessna 172",
      "measurement": "length",
      "name": "wingspan",
      "value": "1.1e1 m",
      "called": "Wingspan of a Cessna 172",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Las Vegas Sphere",
      "measurement": "length",
      "name": "diameter",
      "value": "1.6e2 m",
      "called": "Diameter of the Las Vegas Sphere",
      "quality": 1.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many times could you fit the *wingspan of a Cessna 172* into the *diameter of the Las Vegas Sphere*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "Niagra Falls",
      "measurement": "length",
      "name": "height",
      "value": "5.1e1 m",
      "called": "Height of Niagara Falls",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Largest wind turbine in the world",
      "measurement": "length",
      "name": "tower height",
      "value": "1.5e2 m",
      "called": "Tower height of the largest wind turbine in the world",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many times taller is *the tower height of the largest wind turbine in the world* compared to *the height of Niagara Falls*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "4g LTE",
      "measurement": "length",
      "name": "wavelength",
      "value": "5.0e0 /m",
      "called": "Wavelength of 4G LTE",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "oak tree",
      "measurement": "length",
      "name": "",
      "value": "3.0e1 m",
      "called": "Height of an oak tree",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many times would the *wavelength of 4G LTE* fit into the *height of an oak tree*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "hydrogen atom",
      "measurement": "length",
      "name": "circumference",
      "value": "1.9e-10 m",
      "called": "Circumference of a hydrogen atom",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "orange",
      "measurement": "length",
      "name": "diameter",
      "value": "7.2e-2 m",
      "called": "Diameter of an orange",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *hydrogen atom circumferences* would fit across the *diameter of an orange* if they were lined up side by side?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "Cessna 172",
      "measurement": "length",
      "name": "length",
      "value": "8.3e0 m",
      "called": "Length of a Cessna 172",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Saturn",
      "measurement": "length",
      "name": "diameter of rings",
      "value": "2.8e5",
      "called": "Diameter of Saturn's rings",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many times could you lay out the *length of a Cessna 172* to match the *diameter of Saturn's rings*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "green",
      "measurement": "length",
      "name": "wavelength",
      "value": "5.3e-7 m",
      "called": "Wavelength of green light",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Earth's core",
      "measurement": "length",
      "name": "diameter",
      "value": "2.4e6 m",
      "called": "Diameter of Earth's core",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *wavelengths of green light* would it take to span the *diameter of Earth's core*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "Penny",
      "measurement": "length",
      "name": "diameter",
      "value": "1.9e-2 m",
      "called": "Diameter of a Penny",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "lake Ontario",
      "measurement": "length",
      "name": "shorline length",
      "value": "1.0e6 m",
      "called": "Shoreline length of Lake Ontario",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *pennies* laid side by side would it take to cover the entire *shoreline length of Lake Ontario*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "Titanic",
      "measurement": "length",
      "name": "width",
      "value": "9.2e1 m",
      "called": "Width of the Titanic",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Uranus",
      "measurement": "length",
      "name": "diameter",
      "value": "5.1e7 m",
      "called": "Diameter of Uranus",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many times could the *width of the Titanic* fit into the *diameter of Uranus*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "5g",
      "measurement": "length",
      "name": "wavelength",
      "value": "8.3e1 /m",
      "called": "Wavelength of 5g",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "lake Michigan",
      "measurement": "length",
      "name": "shoreline length",
      "value": "2.3e7 m",
      "called": "Shoreline length of Lake Michigan",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many times would you need to stack the *wavelength of 5g* to match the *shoreline length of Lake Michigan*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "Cessna 172",
      "measurement": "length",
      "name": "length",
      "value": "8.3e0 m",
      "called": "Length of a Cessna 172",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Nile River",
      "measurement": "length",
      "name": "",
      "value": "6.7e6 m",
      "called": "Length of the Nile River",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *Cessna 172s* placed end to end would it take to match the *length of the Nile River*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "oak tree",
      "measurement": "length",
      "name": "",
      "value": "3.0e1 m",
      "called": "Height of an oak tree",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Boeing 747",
      "measurement": "length",
      "name": "wingspan",
      "value": "6.0e1 m",
      "called": "Wingspan of a Boeing 747",
      "quality": 1.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many times does the *wingspan of a Boeing 747* exceed the *height of an oak tree*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "Pyramid of Giza",
      "measurement": "length",
      "name": "base",
      "value": "2.3e2 m",
      "called": "Length of the base of the Pyramid of Giza",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Airbus A380",
      "measurement": "length",
      "name": "range",
      "value": "1.4e7 m",
      "called": "Range of an Airbus A380",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *bases of the Pyramid of Giza* would fit within the *range of an Airbus A380*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "iphone 15",
      "measurement": "length",
      "name": "",
      "value": "1.5e-1 m",
      "called": "Length of an iPhone 15",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "The Louvre Pyramid",
      "measurement": "length",
      "name": "height",
      "value": "2.2e1 m",
      "called": "Height of The Louvre Pyramid",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *iPhone 15s* laid end to end would it take to reach the *height of The Louvre Pyramid*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "enola gay",
      "measurement": "count",
      "name": "engines",
      "value": "4.0e0",
      "called": "Number of engines on the Enola Gay",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Humans",
      "measurement": "count",
      "name": "population",
      "value": "8.1e9",
      "called": "World population of humans",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *humans* are there for every *engine on the Enola Gay*?",
    "quality": 1.0
  },
  {
    "smaller": {
      "thing": "asian elephant",
      "measurement": "count",
      "name": "",
      "value": "5.0e4",
      "called": "Population of Asian Elephants",
      "quality": 1.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "The louvre",
      "measurement": "count",
      "name": "visitors per year",
      "value": "8.9e6",
      "called": "Number of visitors to the Louvre per year",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *yearly visitors to the Louvre* are there for *every Asian Elephant on Earth*?",
    "quality": 1.0
  },
  {
    "smaller": {
      "thing": "largest container ship",
      "measurement": "count",
      "name": "teu capacity",
      "value": "2.3e4",
      "called": "TEU capacity of the largest container ship",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Amazon",
      "measurement": "count",
      "name": "alexa-enabled devices sold",
      "value": "5.0e8",
      "called": "Number of Alexa-enabled devices sold by Amazon",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many times greater is *the number of Alexa-enabled devices* compared to *the TEU capacity of the world's largest container ship*?",
    "quality": 1.0
  },
  {
    "smaller": {
      "thing": "African bull elephant",
      "measurement": "count",
      "name": "",
      "value": "4.0e5",
      "called": "Number of African Bull Elephants",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "grains of sand",
      "measurement": "count",
      "name": "",
      "value": "7.5e18",
      "called": "Number of grains of sand",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *grains of sand* are there for every *African Bull Elephant* in the world?",
    "quality": 1.0
  },
  {
    "smaller": {
      "thing": "lion",
      "measurement": "count",
      "name": "",
      "value": "2.5e4",
      "called": "Number of lions",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Humans",
      "measurement": "count",
      "name": "all time",
      "value": "1.2e11",
      "called": "Total number of humans throughout history",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *humans have ever lived* for each *lion alive today*?",
    "quality": 1.0
  },
  {
    "smaller": {
      "thing": "Little Boy bomb",
      "measurement": "count",
      "name": "",
      "value": "6.0e0",
      "called": "Number of Little Boy bombs",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Airbus A380",
      "measurement": "count",
      "name": "built",
      "value": "2.5e2",
      "called": "Number of Airbus A380s built",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many times more *Airbus A380s* were built than *Little Boy bombs*?",
    "quality": 1.0
  },
  {
    "smaller": {
      "thing": "glucose molecule",
      "measurement": "count",
      "name": "hydrogen atoms",
      "value": "1.2e1",
      "called": "Number of hydrogen atoms in a glucose molecule",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Ben & Jerry's Ice Cream",
      "measurement": "count",
      "name": "flavors",
      "value": "9.8e1",
      "called": "Number of flavors of Ben & Jerry's Ice Cream",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *flavors of Ben & Jerry's* are there for every *hydrogen atom in a glucose molecule*?",
    "quality": 1.0
  },
  {
    "smaller": {
      "thing": "wind power",
      "measurement": "count",
      "name": "number of wind turbines in the us",
      "value": "9.0e4",
      "called": "Number of wind turbines in the United States for wind power",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Humans",
      "measurement": "count",
      "name": "population",
      "value": "8.1e9",
      "called": "World population of humans",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *humans* are there for every *wind turbine in the United States*?",
    "quality": 1.0
  },
  {
    "smaller": {
      "thing": "Boeing 747",
      "measurement": "count",
      "name": "seats",
      "value": "4.0e2",
      "called": "Number of seats in a Boeing 747",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "China",
      "measurement": "count",
      "name": "population",
      "value": "1.4e9",
      "called": "Population of China",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *Chinese citizens* are there for every *seat in a Boeing 747*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "glucose molecule",
      "measurement": "count",
      "name": "oxygen atoms",
      "value": "6.0e0",
      "called": "Number of oxygen atoms in a glucose molecule",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "The louvre",
      "measurement": "count",
      "name": "visitors per year",
      "value": "8.9e6",
      "called": "Number of visitors to the Louvre per year",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *visitors to the Louvre* are there for every *oxygen atom in a glucose molecule*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "United States",
      "measurement": "count",
      "name": "population",
      "value": "3.4e8",
      "called": "Population of the United States",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "apple m3",
      "measurement": "count",
      "name": "",
      "value": "2.5e9",
      "called": "Number of Apple M3 units",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *Apple M3 units* are there for every *person in the United States*?",
    "quality": 0.0
  },
  {
    "smaller": {
      "thing": "Concorde",
      "measurement": "count",
      "name": "passengers",
      "value": "1.2e2",
      "called": "Number of passengers on the Concorde",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "larger": {
      "thing": "Penny",
      "measurement": "count",
      "name": "in circulation",
      "value": "1.5e11",
      "called": "Number of pennies in circulation",
      "quality": 0.0,
      "generated": "2024-03-25T22:29:35+00:00"
    },
    "question": "How many *pennies in circulation* are there for each *passenger who flew on the Concorde*?",
    "quality": 0.0
  }
]